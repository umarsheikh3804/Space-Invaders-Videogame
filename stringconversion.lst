


ARM Macro Assembler    Page 1 


    1 00000000         ; StringConversion.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on TM4C123
    5 00000000         ; ECE319K lab 7 number to string conversions
    6 00000000         ;
    7 00000000         ; Used in ECE319K Labs 7,8,9,10. You write these two fun
                       ctions
    8 00000000         
    9 00000000         
   10 00000000                 EXPORT           Dec2String
   11 00000000                 EXPORT           Fix2String
   12 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   13 00000000                 THUMB
   14 00000000                 PRESERVE8
   15 00000000         
   16 00000000         
   17 00000000         ;-----------------------Dec2String----------------------
                       -
   18 00000000         ; Convert a 32-bit number into unsigned decimal format
   19 00000000         ; String the string into the empty array add null-termin
                       ation
   20 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   21 00000000         ;        R1 pointer to empty array
   22 00000000         ; Output: none
   23 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   24 00000000 00000000 
                       counter EQU              0
   25 00000000         Dec2String
   26 00000000 E92D 4800       PUSH             {R11, LR}
   27 00000004 B081            SUB              SP, #4
   28 00000006 F04F 030A       MOV              R3, #10
   29 0000000A 46EB            MOV              R11, SP
   30 0000000C F04F 0200       MOV              R2, #0
   31 00000010 F8CB 2000       STR              R2, [R11, #counter]
   32 00000014         loop
   33 00000014 2800            CMP              R0, #0
   34 00000016 D013            BEQ              toArray
   35 00000018 F8DB 2000       LDR              R2, [R11, #counter]
   36 0000001C F102 0201       ADD              R2, #1
   37 00000020 F8CB 2000       STR              R2, [R11, #counter]
   38 00000024         ; MOD OPERATION
   39 00000024 FBB0 F2F3       UDIV             R2, R0, R3
   40 00000028 FB02 F203       MUL              R2, R2, R3
   41 0000002C EBA0 0202       SUB              R2, R0, R2
   42 00000030 F102 0230       ADD              R2, #0x30
   43 00000034 B081            SUB              SP, #4
   44 00000036 F88D 2000       STRB             R2, [SP]
   45 0000003A FBB0 F0F3       UDIV             R0, R0, R3
   46 0000003E E7E9            B                loop
   47 00000040         toArray
   48 00000040         ; repeatedly pop and store in array
   49 00000040 F8DB 2000       LDR              R2, [R11, #counter]
   50 00000044 2A00            CMP              R2, #0
   51 00000046 D00A            BEQ              done



ARM Macro Assembler    Page 2 


   52 00000048 F89D 0000       LDRB             R0, [SP]
   53 0000004C 7008            STRB             R0, [R1]
   54 0000004E B001            ADD              SP, #4
   55 00000050 F101 0101       ADD              R1, #1
   56 00000054 F1A2 0201       SUB              R2, #1
   57 00000058 F8CB 2000       STR              R2, [R11, #counter]
   58 0000005C E7F0            B                toArray
   59 0000005E         done
   60 0000005E F04F 0200       MOV              R2, #0
   61 00000062 600A            STR              R2, [R1]
   62 00000064 B001            ADD              SP, #4
   63 00000066 E8BD 4800       POP              {R11, LR}
   64 0000006A 4770            BX               LR
   65 0000006C         
   66 0000006C         ;* * * * * * * * End of Dec2String * * * * * * * *
   67 0000006C         
   68 0000006C         
   69 0000006C         ; -----------------------Fix2String---------------------
                       -
   70 0000006C         ; Create characters for LCD display in fixed-point forma
                       t
   71 0000006C         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   72 0000006C         ; Inputs:  R0 is an unsigned 32-bit number
   73 0000006C         ;          R1 pointer to empty array
   74 0000006C         ; Outputs: none
   75 0000006C         ; E.g., R0=0,    then create "0.000 "
   76 0000006C         ;       R0=3,    then create "0.003"
   77 0000006C         ;       R0=89,   then create "0.089"
   78 0000006C         ;       R0=123,  then create "0.123"
   79 0000006C         ;       R0=9999, then create "9.999"
   80 0000006C         ;       R0>9999, then create "*.***"
   81 0000006C         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   82 0000006C 00000000 
                       count   EQU              0
   83 0000006C         Fix2String
   84 0000006C E92D 0810       PUSH             {R4, R11}
   85 00000070 F04F 030A       MOV              R3, #10
   86 00000074         ; asterisk
   87 00000074 F04F 042A       MOV              R4, #0x2A
   88 00000078 B081            SUB              SP, #4
   89 0000007A 46EB            MOV              R11, SP
   90 0000007C F04F 0205       MOV              R2, #5
   91 00000080 F8CB 2000       STR              R2, [R11, #count]
   92 00000084 F242 720F       MOV              R2, #9999
   93 00000088 4290            CMP              R0, R2
   94 0000008A D804            BHI              wrap
   95 0000008C F04F 0220       MOV              R2, #0x20
   96 00000090 B081            SUB              SP, #4
   97 00000092 F88D 2000       STRB             R2, [SP]
   98 00000096         wrap
   99 00000096 F8DB 2000       LDR              R2, [R11, #count]
  100 0000009A 2A00            CMP              R2, #0
  101 0000009C D024            BEQ              moveToArray
  102 0000009E 2A02            CMP              R2, #2
  103 000000A0 D018            BEQ              addPoint
  104 000000A2 F1A2 0201       SUB              R2, #1
  105 000000A6 F8CB 2000       STR              R2, [R11, #count]



ARM Macro Assembler    Page 3 


  106 000000AA         ; check this line
  107 000000AA B081            SUB              SP, #4
  108 000000AC F242 720F       MOV              R2, #9999
  109 000000B0 4290            CMP              R0, R2
  110 000000B2 D902            BLS              notGreater
  111 000000B4 F88D 4000       STRB             R4, [SP]
  112 000000B8 E7ED            B                wrap
  113 000000BA         notGreater
  114 000000BA FBB0 F2F3       UDIV             R2, R0, R3
  115 000000BE FB02 F203       MUL              R2, R2, R3
  116 000000C2 EBA0 0202       SUB              R2, R0, R2
  117 000000C6 F102 0230       ADD              R2, #0x30
  118 000000CA F88D 2000       STRB             R2, [SP]
  119 000000CE FBB0 F0F3       UDIV             R0, R0, R3
  120 000000D2 E7E0            B                wrap
  121 000000D4         addPoint
  122 000000D4 F1A2 0201       SUB              R2, #1
  123 000000D8 F8CB 2000       STR              R2, [R11, #count]
  124 000000DC F04F 022E       MOV              R2, #0x2E
  125 000000E0 B081            SUB              SP, #4
  126 000000E2 F88D 2000       STRB             R2, [SP]
  127 000000E6 E7D6            B                wrap
  128 000000E8         moveToArray
  129 000000E8 45DD            CMP              SP, R11
  130 000000EA D006            BEQ              finish
  131 000000EC F89D 0000       LDRB             R0, [SP]
  132 000000F0 7008            STRB             R0, [R1]
  133 000000F2 B001            ADD              SP, #4
  134 000000F4 F101 0101       ADD              R1, #1
  135 000000F8 E7F6            B                moveToArray
  136 000000FA         finish
  137 000000FA F04F 0200       MOV              R2, #0
  138 000000FE 600A            STR              R2, [R1]
  139 00000100 B001            ADD              SP, #4
  140 00000102 E8BD 0810       POP              {R4, R11}
  141 00000106 4770            BX               LR
  142 00000108         
  143 00000108                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  144 00000108                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4 --fpu=
SoftVFP --depend=.\stringconversion.d -o.\stringconversion.o -I.\RTE\_SpaceInva
ders -I"C:\Users\Umar Sheikh\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core
\Include" -I"C:\Users\Umar Sheikh\AppData\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\D
evice\Include\TM4C123" --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSI
ON SETA 538" --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --pre
define="_RTE_ SETA 1" --list=.\stringconversion.lst ..\inc\StringConversion.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 12 in file ..\inc\StringConversion.s
   Uses
      None
Comment: .text unused
Dec2String 00000000

Symbol: Dec2String
   Definitions
      At line 25 in file ..\inc\StringConversion.s
   Uses
      At line 10 in file ..\inc\StringConversion.s
Comment: Dec2String used once
Fix2String 0000006C

Symbol: Fix2String
   Definitions
      At line 83 in file ..\inc\StringConversion.s
   Uses
      At line 11 in file ..\inc\StringConversion.s
Comment: Fix2String used once
addPoint 000000D4

Symbol: addPoint
   Definitions
      At line 121 in file ..\inc\StringConversion.s
   Uses
      At line 103 in file ..\inc\StringConversion.s
Comment: addPoint used once
done 0000005E

Symbol: done
   Definitions
      At line 59 in file ..\inc\StringConversion.s
   Uses
      At line 51 in file ..\inc\StringConversion.s
Comment: done used once
finish 000000FA

Symbol: finish
   Definitions
      At line 136 in file ..\inc\StringConversion.s
   Uses
      At line 130 in file ..\inc\StringConversion.s
Comment: finish used once
loop 00000014

Symbol: loop
   Definitions
      At line 32 in file ..\inc\StringConversion.s
   Uses
      At line 46 in file ..\inc\StringConversion.s
Comment: loop used once
moveToArray 000000E8

Symbol: moveToArray



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 128 in file ..\inc\StringConversion.s
   Uses
      At line 101 in file ..\inc\StringConversion.s
      At line 135 in file ..\inc\StringConversion.s

notGreater 000000BA

Symbol: notGreater
   Definitions
      At line 113 in file ..\inc\StringConversion.s
   Uses
      At line 110 in file ..\inc\StringConversion.s
Comment: notGreater used once
toArray 00000040

Symbol: toArray
   Definitions
      At line 47 in file ..\inc\StringConversion.s
   Uses
      At line 34 in file ..\inc\StringConversion.s
      At line 58 in file ..\inc\StringConversion.s

wrap 00000096

Symbol: wrap
   Definitions
      At line 98 in file ..\inc\StringConversion.s
   Uses
      At line 94 in file ..\inc\StringConversion.s
      At line 112 in file ..\inc\StringConversion.s
      At line 120 in file ..\inc\StringConversion.s
      At line 127 in file ..\inc\StringConversion.s

11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

count 00000000

Symbol: count
   Definitions
      At line 82 in file ..\inc\StringConversion.s
   Uses
      At line 91 in file ..\inc\StringConversion.s
      At line 99 in file ..\inc\StringConversion.s
      At line 105 in file ..\inc\StringConversion.s
      At line 123 in file ..\inc\StringConversion.s

counter 00000000

Symbol: counter
   Definitions
      At line 24 in file ..\inc\StringConversion.s
   Uses
      At line 31 in file ..\inc\StringConversion.s
      At line 35 in file ..\inc\StringConversion.s
      At line 37 in file ..\inc\StringConversion.s
      At line 49 in file ..\inc\StringConversion.s
      At line 57 in file ..\inc\StringConversion.s

2 symbols
347 symbols in table
